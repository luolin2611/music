<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.music.core.dao.music.MusicDao">
	<!-- 先插入 MusicDict 的图片 -->
	<insert id="insertDictImgDictId" parameterType="String">
		insert into
		music_dict(music_dict_id,dict_img_path,status)
		values(#{music_dict_id},
		#{dict_img_path}, '01');
	</insert>

	<!-- 根据 music_dict_id 查询是否存在 -->
	<select id="findMusiDictIdByMusiDict" parameterType="String"
		resultType="String">
		select music_dict_id from music_dict where music_dict_id =
		#{music_dict_id} and status='01'
	</select>

	<select id="findMusiDictIdByDictName" parameterType="String"
		resultType="String">
		select music_dict_id from music_dict where dict_name =
		#{dict_name}
	</select>

	<update id="updateMusicDict" parameterType="musicDict">
		update music_dict set
		dict_name = #{dict_name}, update_time = #{update_time}, add_user_name
		= #{add_user_name}, status="00" where music_dict_id = #{music_dict_id}
	</update>

	<select id="countMusicNumForDict" parameterType="String"
		resultType="String">
		select count(*) from music where music_dict_id =
		#{music_dict_id}
	</select>

	<resultMap id="musicDictList" type="musicDict">
		<result column="music_dict_id" property="music_dict_id" />
		<result column="dict_name" property="dict_name" />
		<result column="update_time" property="update_time" />
		<result column="add_user_name" property="add_user_name" />
		<result column="dict_img_path" property="dict_img_path" />
		<result column="status" property="status" />
		<association column="music_dict_id" property="music_num"
			javaType="String" select="countMusicNumForDict" />
	</resultMap>

	<select id="findMusicDictList" resultMap="musicDictList">
		select * from
		music_dict where status = '00' order by update_time DESC
	</select>

	<resultMap type="Music" id="musicList">
		<result column="music_id" property="music_id" />
		<result column="author" property="author" />
		<result column="file_duration" property="file_duration" />
		<result column="title" property="title" />
		<result column="name" property="name" />
		<result column="update_time" property="update_time" />
		<result column="music_img_path" property="music_img_path" />
		<result column="status" property="status" />
		<association property="sysUser" javaType="sysUser">
			<result column="add_sys_user_id" property="user_id" />
			<result column="user_name" property="user_name" />
			<result column="password" property="password" />
			<result column="update_time" property="update_time" />
			<result column="status" property="status" />
			<result column="user_level" property="user_level" />
			<result column="real_name" property="real_name" />
			<result column="add_user_name" property="add_user_name" />
		</association>
		<association property="musicDict" javaType="musicDict">
			<result column="music_dict_id" property="music_dict_id" />
			<result column="dict_name" property="dict_name" />
			<result column="update_time" property="update_time" />
			<result column="add_user_name" property="add_user_name" />
			<result column="dict_img_path" property="dict_img_path" />
			<result column="status" property="status" />
		</association>
		<collection property="musicImgList" resultMap="musicImgList"/>
	</resultMap>
	
	<resultMap type="MusicImg" id="musicImgList">
		<result column="img_id" property="img_id" />
        <result column="img_path" property="img_path" />
        <result column="music_id" property="music_id" />
	</resultMap>
	
	<!-- and m.status = '00' and md.status = '00' and su.status = '00' -->
	<select id="findAllMusic" resultMap="musicList">
		select m.*,su.*,md.*,mi.* from
		music m,sys_user su,music_dict md,music_img mi where
		m.music_dict_id =
		md.music_dict_id and m.add_sys_user_id = su.user_id and  m.music_id = mi.music_id
		order by
		m.update_time DESC
	</select>

	<!-- 查询music_id是否存在 -->
	<select id="selectMusicIdByMusicId" parameterType="String"
		resultType="String">
		select music_id from music where music_id = #{music_id}
	</select>

	<!-- 插入音乐文件路径（第一次执行的时候） -->
	<insert id="insertMusicFilePath" parameterType="String">
		insert into
		music(music_id, music_file_path, file_duration) values(#{music_id},
		#{music_file_path}, #{file_duration})
	</insert>

	<!-- 更新音乐文件路径（第一次执行的时候） -->
	<update id="updateMusicFilePath" parameterType="String">
		update music set
		music_file_path= #{music_file_path}, file_duration = #{file_duration}
		where music_id = #{music_id}
	</update>

	<!-- 插入标题图片路径（第一次执行的时候） -->
	<insert id="insertTitleImgFilePath" parameterType="String">
		insert into
		music(music_id, music_img_path) values(#{music_id},
		#{music_img_path})
	</insert>

	<!-- 更新标题图片路径（第一次执行的时候） -->
	<update id="updateTitleImgFilePath" parameterType="String">
		update music
		set music_img_path= #{music_img_path} where music_id = #{music_id}
	</update>
	
	<!-- 查询插入歌曲图片的数量 -->
	<select id="selectImgsCountByMusicId" parameterType="String" resultType="Integer">
		select count(*) from music_img where music_id = #{music_id} 
	</select>
	
	<!-- 插入歌曲图片路径 -->
	<insert id="insertMusicImgsFilePath" parameterType="String">
		insert into
		music_img(img_id, img_path, music_id) values(#{img_id},
		#{img_path}, #{music_id})
	</insert>

	<!-- 查询歌曲名称是否重复 -->
	<select id="selectMusicByTitleOrName" parameterType="String" resultType="String">
		select music_id from music where title = #{title} or
		name = #{name} limit 0,1
	</select>

	<!-- 更新音乐库数据库 -->
	<update id="updateMusic" parameterType="music">
		update music set author =
		#{music.author}, title = #{music.title},
		add_sys_user_id =
		#{music.sysUser.user_id}, name = #{music.name},
		update_time =
		#{music.update_time}, status = '00', music_dict_id =
		#{music.musicDict.music_dict_id} where music_id = #{music.music_id}
	</update>


</mapper>
